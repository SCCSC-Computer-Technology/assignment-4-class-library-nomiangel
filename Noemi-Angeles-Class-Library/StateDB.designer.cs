#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Noemi_Angeles_CPT_206_LAB_2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StateDB")]
	public partial class StateDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    #endregion
		
		public StateDBDataContext() : 
				base(global::Noemi_Angeles_CPT_206_LAB_2.Properties.Settings.Default.StateDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _State1;
		
		private string _Population;
		
		private string _State_Flag_Description;
		
		private string _State_Flower;
		
		private string _State_Bird;
		
		private string _State_Colors;
		
		private string _Three_Largest_Cities;
		
		private string _State_Capitol;
		
		private string _Median_Income;
		
		private string _Percentage_of_Computer_Related_Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnState1Changing(string value);
    partial void OnState1Changed();
    partial void OnPopulationChanging(string value);
    partial void OnPopulationChanged();
    partial void OnState_Flag_DescriptionChanging(string value);
    partial void OnState_Flag_DescriptionChanged();
    partial void OnState_FlowerChanging(string value);
    partial void OnState_FlowerChanged();
    partial void OnState_BirdChanging(string value);
    partial void OnState_BirdChanged();
    partial void OnState_ColorsChanging(string value);
    partial void OnState_ColorsChanged();
    partial void OnThree_Largest_CitiesChanging(string value);
    partial void OnThree_Largest_CitiesChanged();
    partial void OnState_CapitolChanging(string value);
    partial void OnState_CapitolChanged();
    partial void OnMedian_IncomeChanging(string value);
    partial void OnMedian_IncomeChanged();
    partial void OnPercentage_of_Computer_Related_JobsChanging(string value);
    partial void OnPercentage_of_Computer_Related_JobsChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State", Storage="_State1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string State1
		{
			get
			{
				return this._State1;
			}
			set
			{
				if ((this._State1 != value))
				{
					this.OnState1Changing(value);
					this.SendPropertyChanging();
					this._State1 = value;
					this.SendPropertyChanged("State1");
					this.OnState1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="NVarChar(50)")]
		public string Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flag Description]", Storage="_State_Flag_Description", DbType="NVarChar(MAX)")]
		public string State_Flag_Description
		{
			get
			{
				return this._State_Flag_Description;
			}
			set
			{
				if ((this._State_Flag_Description != value))
				{
					this.OnState_Flag_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._State_Flag_Description = value;
					this.SendPropertyChanged("State_Flag_Description");
					this.OnState_Flag_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flower]", Storage="_State_Flower", DbType="NVarChar(50)")]
		public string State_Flower
		{
			get
			{
				return this._State_Flower;
			}
			set
			{
				if ((this._State_Flower != value))
				{
					this.OnState_FlowerChanging(value);
					this.SendPropertyChanging();
					this._State_Flower = value;
					this.SendPropertyChanged("State_Flower");
					this.OnState_FlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Bird]", Storage="_State_Bird", DbType="NVarChar(50)")]
		public string State_Bird
		{
			get
			{
				return this._State_Bird;
			}
			set
			{
				if ((this._State_Bird != value))
				{
					this.OnState_BirdChanging(value);
					this.SendPropertyChanging();
					this._State_Bird = value;
					this.SendPropertyChanged("State_Bird");
					this.OnState_BirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Colors]", Storage="_State_Colors", DbType="NVarChar(50)")]
		public string State_Colors
		{
			get
			{
				return this._State_Colors;
			}
			set
			{
				if ((this._State_Colors != value))
				{
					this.OnState_ColorsChanging(value);
					this.SendPropertyChanging();
					this._State_Colors = value;
					this.SendPropertyChanged("State_Colors");
					this.OnState_ColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Three Largest Cities]", Storage="_Three_Largest_Cities", DbType="NVarChar(50)")]
		public string Three_Largest_Cities
		{
			get
			{
				return this._Three_Largest_Cities;
			}
			set
			{
				if ((this._Three_Largest_Cities != value))
				{
					this.OnThree_Largest_CitiesChanging(value);
					this.SendPropertyChanging();
					this._Three_Largest_Cities = value;
					this.SendPropertyChanged("Three_Largest_Cities");
					this.OnThree_Largest_CitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Capitol]", Storage="_State_Capitol", DbType="NVarChar(50)")]
		public string State_Capitol
		{
			get
			{
				return this._State_Capitol;
			}
			set
			{
				if ((this._State_Capitol != value))
				{
					this.OnState_CapitolChanging(value);
					this.SendPropertyChanging();
					this._State_Capitol = value;
					this.SendPropertyChanged("State_Capitol");
					this.OnState_CapitolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Median Income]", Storage="_Median_Income", DbType="NVarChar(50)")]
		public string Median_Income
		{
			get
			{
				return this._Median_Income;
			}
			set
			{
				if ((this._Median_Income != value))
				{
					this.OnMedian_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Median_Income = value;
					this.SendPropertyChanged("Median_Income");
					this.OnMedian_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percentage of Computer-Related Jobs]", Storage="_Percentage_of_Computer_Related_Jobs", DbType="NVarChar(50)")]
		public string Percentage_of_Computer_Related_Jobs
		{
			get
			{
				return this._Percentage_of_Computer_Related_Jobs;
			}
			set
			{
				if ((this._Percentage_of_Computer_Related_Jobs != value))
				{
					this.OnPercentage_of_Computer_Related_JobsChanging(value);
					this.SendPropertyChanging();
					this._Percentage_of_Computer_Related_Jobs = value;
					this.SendPropertyChanged("Percentage_of_Computer_Related_Jobs");
					this.OnPercentage_of_Computer_Related_JobsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
